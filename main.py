# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Ui/Main.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from QtApp.Tables import TablesPanel
from QtApp.SettingPage import SettingPanel
from QtApp.InitialTable import InitialTable
from QtApp.Menu import Menu
from QtApp.Status import StatusPanel
from QtApp.OrderList import OrderListPanel
from QtApp.JumpWindow import JumpWindow
from DataBase import DataBase
from Logger import CreateLogger
from Config import Config
from datetime import datetime


class Ui_MainWindow(QtWidgets.QMainWindow):
    def __init__(self):
        QtWidgets.QMainWindow.__init__(self)
        self.Logger = CreateLogger('Zhangji', 'TmpLog')
        self.DataBase = DataBase(self.Logger, 'DataBase')
        self.TableOrder = self.DataBase.Setting.GetValue(Config.DataBase.StoreList.TABLE_ORDER)
        self.TableNumber = None
        try:
            self.setupUi()
        except Exception as e:
            self.DataBase.open = False
            self.DataBase.Setting.open = False
            raise e

    def setupUi(self):
        self.setObjectName("MainWindow")
        self.resize(1121, 679)
        self.centralwidget = QtWidgets.QWidget(self)
        self.centralwidget.setStyleSheet("border: 3px solid blue;")
        self.centralwidget.setObjectName("centralwidget")
        self.SettingPanel = SettingPanel(self.centralwidget)
        self.SettingPanel.setVisible(False)

        self.JumpWindow = JumpWindow(self.centralwidget)
        self.JumpWindow.setVisible(False)

        self.splitter = QtWidgets.QSplitter(self.centralwidget)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.TablePanel = TablesPanel(self.splitter)
        self.TablePanel.setupUi(self.TableOrder)
        self.TablePanel.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.TablePanel.setFrameShadow(QtWidgets.QFrame.Raised)

        self.frame_2 = QtWidgets.QFrame(self.splitter)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")

        self.splitter_2 = QtWidgets.QSplitter(self.frame_2)
        self.splitter_2.setGeometry(QtCore.QRect(0, 10, 451, 621))
        self.splitter_2.setOrientation(QtCore.Qt.Vertical)
        self.splitter_2.setObjectName("splitter_2")

        self.RightTopFrame = QtWidgets.QFrame(self.splitter_2)
        self.RightTopFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.RightTopFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.RightTopFrame.setObjectName("RightTopFrame")

        self.InitialPanel = InitialTable(self.RightTopFrame)
        self.InitialPanel.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.InitialPanel.setFrameShadow(QtWidgets.QFrame.Raised)

        self.StatusPanel = StatusPanel(self.RightTopFrame)
        self.StatusPanel.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.StatusPanel.setFrameShadow(QtWidgets.QFrame.Raised)
        self.StatusPanel.setVisible(False)

        self.MenuPanel = Menu(self.RightTopFrame)
        self.MenuPanel.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.MenuPanel.setFrameShadow(QtWidgets.QFrame.Raised)
        self.MenuPanel.setVisible(False)

        self.RightBottomFrame = QtWidgets.QFrame(self.splitter_2)
        self.RightBottomFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.RightBottomFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.RightBottomFrame.setObjectName("RightBottomFrame")

        self.OrderPanel = OrderListPanel(self.RightBottomFrame)
        self.OrderPanel.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.OrderPanel.setFrameShadow(QtWidgets.QFrame.Raised)
        self.OrderPanel.setObjectName("OrderPanel")

        self.setCentralWidget(self.centralwidget)
        self.toolbar = self.addToolBar("Panels")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/ToolBar/Setting.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.SettingAction = QtWidgets.QAction(icon, "SettingPage", self)
        self.toolbar.addAction(self.SettingAction)
        self.SettingAction.triggered.connect(self.menuSetting_onClick)

        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/ToolBar/Table.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.TableAction = QtWidgets.QAction(icon1, "MenuPage", self)
        self.toolbar.addAction(self.TableAction)
        self.TableAction.triggered.connect(self.menuTable_onClick)

        self.TestAction = QtWidgets.QAction("Test", self)
        self.toolbar.addAction(self.TestAction)
        self.TestAction.triggered.connect(self.ShowJumpWindow)

        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self)

        self.TablePanel.BindEvent(self.TableButClick)
        self.closeEvent = self.Close
        self.LayoutSetting()

        self.SettingPanel.SetupPrinters(self.DataBase.Printer)
        self.InitialPanel.AddConnect(self.OpenTable)

        self.JumpWindow.InitialCloseEvent(self.CloseJumpWindow)

        self.StatusPanel.CloseTableConnect(self.CloseTableEvent)
        self.StatusPanel.NewOrderConnect(self.StartOrder)

        self.MenuPanel.AddMenu(self.DataBase.menu)

    def LayoutSetting(self):
        hbox = QtWidgets.QHBoxLayout(self)
        hbox.addWidget(self.splitter)
        hbox.addWidget(self.SettingPanel)
        hbox.addWidget(self.JumpWindow)
        self.centralwidget.setLayout(hbox)

        hbox = QtWidgets.QHBoxLayout(self.frame_2)
        hbox.addWidget(self.splitter_2)
        self.frame_2.setLayout(hbox)

        hbox = QtWidgets.QHBoxLayout(self.RightTopFrame)
        hbox.addWidget(self.InitialPanel)
        hbox.addWidget(self.MenuPanel)
        hbox.addWidget(self.StatusPanel)
        self.RightTopFrame.setLayout(hbox)

        hbox = QtWidgets.QHBoxLayout(self.RightBottomFrame)
        hbox.addWidget(self.OrderPanel)
        self.RightBottomFrame.setLayout(hbox)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("MainWindow", "MainWindow"))

    def menuSetting_onClick(self, e):
        self.SettingPanel.setVisible(True)
        self.splitter.setVisible(False)

    def menuTable_onClick(self, e):
        self.SettingPanel.setVisible(False)
        self.splitter.setVisible(True)

    def setupTableColor(self):
        self.DataBase.GetOpenTableInfo()
        self.TablePanel.setupTableColor(self.DataBase.TableInfo)

    def TableButClick(self, TableNumber):
        self.TableNumber = TableNumber
        self.MenuPanel.setVisible(False)
        self.DataBase.GetOpenTableInfo()
        TableInfo = None
        if TableNumber in self.DataBase.TableInfo.ByTableIDDict:
            TableInfo = self.DataBase.TableInfo.ByTableIDDict[TableNumber]
        if TableInfo is None or TableInfo.StartTime is None:
            # initial table
            self.InitialPanel.setVisible(True)
            self.InitialPanel.DisplayTable(TableNumber)
            self.OrderPanel.setVisible(False)
            self.StatusPanel.setVisible(False)
        elif TableInfo.EndTime is None:
            # working table
            self.InitialPanel.setVisible(False)
            self.StatusPanel.setVisible(True)
            self.StatusPanel.DisplayTable(TableInfo)
            self.OrderPanel.setVisible(True)
            self.OrderPanel.DisplayTable(TableInfo, self.DataBase.menu)
        elif not TableInfo.IsFinished:
            # finishing table
            pass

    def OpenTable(self):
        TableNumber = self.TableNumber
        if TableNumber is not None:
            self.InitialPanel.setVisible(False)
            self.StatusPanel.setVisible(True)
            self.DataBase.InitialOrder(TableNumber, self.InitialPanel.EditBoxNumOfPeople.value())
            self.TableButClick(self.TableNumber)

    def CloseTableEvent(self):
        # Need a jump out window
        self.JumpWindow.SetQuestion('确定要清台吗？')
        self.JumpWindow.connect(self.CloseTable)
        self.ShowJumpWindow()

    def CloseTable(self):
        self.CloseJumpWindow()
        self.DataBase.CloseTable(self.DataBase.TableInfo.ByTableIDDict[self.TableNumber].OrderID)
        self.TableButClick(self.TableNumber)

    def ShowJumpWindow(self):
        self.JumpWindow.setVisible(True)
        self.SettingPanel.setVisible(False)
        self.splitter.setVisible(False)

    def CloseJumpWindow(self):
        self.JumpWindow.setVisible(False)
        self.splitter.setVisible(True)
        self.JumpWindow.BtnYes.pressed.disconnect()

    def StartOrder(self):
        self.StatusPanel.setVisible(False)
        self.MenuPanel.setVisible(True)
        self.OrderPanel.setVisible(True)
        self.OrderPanel.Clear()

    def Close(self, e):
        print('exit')
        self.DataBase.open = False
        self.DataBase.Setting.open = False



import QtApp.resource_rc

if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    ui = Ui_MainWindow()
    ui.show()
    sys.exit(app.exec_())
